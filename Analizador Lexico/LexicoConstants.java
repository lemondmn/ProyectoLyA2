/* Generated By:JavaCC: Do not edit this line. LexicoConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INT = 1;
  /** RegularExpression Id. */
  int FLOAT = 2;
  /** RegularExpression Id. */
  int CHAR = 3;
  /** RegularExpression Id. */
  int RETURN = 4;
  /** RegularExpression Id. */
  int VOID = 5;
  /** RegularExpression Id. */
  int IF = 6;
  /** RegularExpression Id. */
  int ELSE = 7;
  /** RegularExpression Id. */
  int WHILE = 8;
  /** RegularExpression Id. */
  int SUM = 9;
  /** RegularExpression Id. */
  int SUB = 10;
  /** RegularExpression Id. */
  int MULT = 11;
  /** RegularExpression Id. */
  int DIV = 12;
  /** RegularExpression Id. */
  int EQUALS = 13;
  /** RegularExpression Id. */
  int MOD = 14;
  /** RegularExpression Id. */
  int BRACKETOPEN = 15;
  /** RegularExpression Id. */
  int BRACKETCLOSE = 16;
  /** RegularExpression Id. */
  int SQUAREBRACKETOPEN = 17;
  /** RegularExpression Id. */
  int SQUAREBRACKETCLOSE = 18;
  /** RegularExpression Id. */
  int CURLYBRACKETOPEN = 19;
  /** RegularExpression Id. */
  int CURLYBRACKETCLOSE = 20;
  /** RegularExpression Id. */
  int ANGLEBRACKETOPEN = 21;
  /** RegularExpression Id. */
  int ANGLEBRACKETCLOSE = 22;
  /** RegularExpression Id. */
  int SEMICOLON = 23;
  /** RegularExpression Id. */
  int COMMA = 24;
  /** RegularExpression Id. */
  int ID = 25;
  /** RegularExpression Id. */
  int NUMENT = 26;
  /** RegularExpression Id. */
  int NUMREAL = 27;
  /** RegularExpression Id. */
  int SIMPLECHAR = 28;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"int\"",
    "\"float\"",
    "\"char\"",
    "\"return\"",
    "\"void\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "<SUM>",
    "<SUB>",
    "<MULT>",
    "<DIV>",
    "<EQUALS>",
    "<MOD>",
    "<BRACKETOPEN>",
    "<BRACKETCLOSE>",
    "<SQUAREBRACKETOPEN>",
    "<SQUAREBRACKETCLOSE>",
    "<CURLYBRACKETOPEN>",
    "<CURLYBRACKETCLOSE>",
    "<ANGLEBRACKETOPEN>",
    "<ANGLEBRACKETCLOSE>",
    "<SEMICOLON>",
    "<COMMA>",
    "<ID>",
    "<NUMENT>",
    "<NUMREAL>",
    "<SIMPLECHAR>",
    "<token of kind 29>",
    "<token of kind 30>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 35>",
  };

}
