INT: int
FIN COMENTARIO: gcd
PARENTESIS INICAL: (
INT: int
FIN COMENTARIO: u
COMA: ,
INT: int
FIN COMENTARIO: v
PARENTESIS FINAL: )
LLAVE INICIAL: {
IF: if
PARENTESIS INICAL: (
FIN COMENTARIO: v
IGUAL: =
IGUAL: =
FIN COMENTARIO: 0
PARENTESIS FINAL: )
RETURN: return
FIN COMENTARIO: u
PUNTO Y COMA: ;
ELSE: else
RETURN: return
FIN COMENTARIO: gcd
PARENTESIS INICAL: (
FIN COMENTARIO: v
COMA: ,
FIN COMENTARIO: u
RESTA: -
FIN COMENTARIO: u
DIVISION: /
FIN COMENTARIO: v
MULTIPLICACION: *
FIN COMENTARIO: v
PARENTESIS FINAL: )
PUNTO Y COMA: ;
LLAVE FINAL: }
VOID: void
FIN COMENTARIO: main
PARENTESIS INICAL: (
VOID: void
PARENTESIS FINAL: )
LLAVE INICIAL: {
INT: int
FIN COMENTARIO: x
PUNTO Y COMA: ;
INT: int
FIN COMENTARIO: y
PUNTO Y COMA: ;
FIN COMENTARIO: x
IGUAL: =
FIN COMENTARIO: input
PARENTESIS INICAL: (
PARENTESIS FINAL: )
PUNTO Y COMA: ;
FIN COMENTARIO: y
IGUAL: =
FIN COMENTARIO: input
PARENTESIS INICAL: (
PARENTESIS FINAL: )
PUNTO Y COMA: ;
FIN COMENTARIO: output
PARENTESIS INICAL: (
FIN COMENTARIO: gcd
PARENTESIS INICAL: (
FIN COMENTARIO: x
COMA: ,
FIN COMENTARIO: y
PARENTESIS FINAL: )
PARENTESIS FINAL: )
PUNTO Y COMA: ;
LLAVE FINAL: }

Analisis Lexico terminado!
