Declaracion int: int
Identificador: gcd
Parentesis incial: (
Declaracion int: int
Identificador: u
Coma: ,
Declaracion int: int
Identificador: v
Parentesis final: )
Llave incial: {
Declaracion if: if
Parentesis incial: (
Identificador: v
Operador igual igual: ==
Numero entero: 0
Parentesis final: )
Declaracion return: return
Identificador: u
Punto y Coma: ;
Declaracion else: else
Declaracion return: return
Identificador: gcd
Parentesis incial: (
Identificador: v
Coma: ,
Identificador: u
Operador resta: -
Identificador: u
Operador division: /
Identificador: v
Operador multiplicacion: *
Identificador: v
Parentesis final: )
Punto y Coma: ;
Llave final: }
Declaracion void: void
Identificador: main
Parentesis incial: (
Declaracion void: void
Parentesis final: )
Llave incial: {
Declaracion int: int
Identificador: x
Punto y Coma: ;
Declaracion int: int
Identificador: y
Punto y Coma: ;
Identificador: x
Operador igual: =
Identificador: input
Parentesis incial: (
Parentesis final: )
Punto y Coma: ;
Identificador: y
Operador igual: =
Identificador: input
Parentesis incial: (
Parentesis final: )
Punto y Coma: ;
Identificador: output
Parentesis incial: (
Identificador: gcd
Parentesis incial: (
Identificador: x
Coma: ,
Identificador: y
Parentesis final: )
Parentesis final: )
Punto y Coma: ;
Llave final: }

Analisis Lexico terminado!
