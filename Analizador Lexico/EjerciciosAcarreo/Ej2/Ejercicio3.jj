PARSER_BEGIN (Lexico)

	import java.util.*;

	public class Lexico {

		class Valores {
			int valor;
			int exp;
			int base;

			public Valores (int valor, int exp, int base) {
				this.valor = valor;
				this.exp = exp;
				this.base = base;
			}

			public Valores () {
				this.exp = 1;
			}

			public void setValor (int val) {
				this.valor = val;
			}

			public int getValor() {
				return val;
			}

			public void setExp (int exp) {
				this.exp = exp;
			}

			public int getExp () {
				return exp;
			}
			
			public void setBase (int b) {
				this.base = b;
			}

			public int getBase () {
				return base;
			} 
		}

		public static void main (String[] args) throws ParseException {
			Lexico anLex = new Lexico(System.in);
			//anLex.analizar();
			anLex.sintactico();

			System.out.println("\nAnalisis terminado!");
		}
	}

PARSER_END (Lexico)

TOKEN:
{
	<DEC : ["d"]>
	|
	<OCT : ["o"]>
	|
	<ZERO : ["0"]>
	|
	<ONE : ["1"]>
	|
	<TWO : ["2"]>
	|
	<THREE : ["3"]>
	|
	<FOUR : ["4"]>
	|
	<FIVE : ["5"]>
	|
	<SIX : ["6"]>
	|
	<SEVEN : ["7"]>
	|
	<EIGHT : ["8"]>
	|
	<NINE : ["9"]>
}

void sintactico() : {}
{
    (numbase()) + EOF
}

void numbase() : { Valores valores; }
{
    num(valores.getBase()) valores = carbase()
}

int carbase() : { int base; }
{
    <DEC>
		{base = 8; return base;}
	|
	<OCT>
		{base = 10; return base;}
}

void num(int base) : { Valores valores; }
{
    valores = digito(base) num(base) | valores = digito(base)
}

Valores digito(int base) : { 
	Valores val;
	val.setBase(base);
}
{
    <ZERO> {val.setValor(0); return val;}
	|
	<ONE> {val.setValor(1); return val;}
	|
	<TWO> {val.setValor(2); return val;}
	|
	<THREE> {val.setValor(3); return val;}
	|
	<FOUR> {val.setValor(4); return val;}
	|
	<FIVE> {val.setValor(5); return val;}
	|
	<SIX> {val.setValor(6); return val;}
	|
	<SEVEN> {val.setValor(7); return val;}
	|
	<EIGHT> 
		{
			if (base == 8) {
				val.setValor(-1)
				return val;
			} else {
				val.setValor(8)
				return val;
			}
		}
	|
	<NINE>
		{
			if (base == 8) {
				val.setValor(-1)
				return val;
			} else {
				val.setValor(9)
				return val;
			}
		}
}