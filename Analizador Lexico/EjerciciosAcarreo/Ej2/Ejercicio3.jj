PARSER_BEGIN (Lexico)

	import java.util.*;

	public class Lexico {

		public static void main (String[] args) throws ParseException {
			Lexico anLex = new Lexico(System.in);
			//anLex.analizar();
			anLex.sintactico();

			System.out.println("\nAnalisis terminado!");
		}
	}

PARSER_END (Lexico)

TOKEN:
{
	<DEC : ["d"]>
	|
	<OCT : ["o"]>
	|
	<ZERO : ["0"]>
	|
	<ONE : ["1"]>
	|
	<TWO : ["2"]>
	|
	<THREE : ["3"]>
	|
	<FOUR : ["4"]>
	|
	<FIVE : ["5"]>
	|
	<SIX : ["6"]>
	|
	<SEVEN : ["7"]>
	|
	<EIGHT : ["8"]>
	|
	<NINE : ["9"]>
}

void sintactico() : {}
{
    (numbase()) + EOF
}

void numbase() : { int base; }
{
    num(base) base = carbase()
}

int carbase() : { int base; }
{
    <DEC>
		{base = 8; return base;}
	|
	<OCT>
		{base = 10; return base;}
}

void num(int base) : { int[] valores; }
{
    (valores = digito(base, 8) num(base) | valores = digito(base, 8))
	{
		if (valores[0] == -1) {
			System.out.println("Error: El numero no es valido");
		} else {
			System.out.println("El numero es valido");
		}
	}
}

int digito(int base, int exp) : { int[] val; val[1]; val[1] = val[1] base * exp; }
{
    <ZERO> {val[0] = 0; return val;}
	|
	<ONE> {val[0] = 1; return val;}
	|
	<TWO> {val[0] = 2; return val;}
	|
	<THREE> {val[0] = 3; return val;}
	|
	<FOUR> {val[0] = 4; return val;}
	|
	<FIVE> {val[0] = 5; return val;}
	|
	<SIX> {val[0] = 6; return val;}
	|
	<SEVEN> {val[0] = 7; return val;}
	|
	<EIGHT> 
		{
			if (base == 8) {
				val[0] = -1;
				return val;
			} else {
				val[0] = 8;
				return val;
			}
		}
	|
	<NINE>
		{
			if (base == 8) {
				val[0] = -1;
				return val;
			} else {
				val[0] = 9;
				return val;
			}
		}
}